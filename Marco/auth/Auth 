My understanding from the Auth class was that the term Authentication has to do with login information - such as registered(security)- 
basically proving who a person is and also finding out who the person is. 

Authorization- has to deal with the role a user that can do- 
as in their responsibility such admin can delete stuff while a regular user cannot do certain roles. 
 
 One line of defense within Auth is using hashing algorithms to obscure passwords.

For Example:
If "STARBUCKS" was my password, the hashing algorithm will generate a string in their server that will equally mean the same thing but in different text (irreversible string) 

"STABUCKS" = "hhGhuo3ohb3098fvh0u8wbbiniuadgfbpsadfjkl"

BUT 

"hhGhuo3ohb3098fvh0u8wbbiniuadgfbpsadfjkl" cannot be converted back into "STARBUCKS"


JWT (JSON Web Token)
A JWT is a small piece of data that has some information in it that everyone can read (called the 'payload'). 
However, the JWT also has a signature that is cryptographically signed. The signature matches the data in the JWT. The signature can only be generated by the 
original person who creates the JWT. If someone else tries to change the data in the JWT, the signature won't match and we'll know that the code has been
tampered with and we cannot trust it. (Invalidating the token)